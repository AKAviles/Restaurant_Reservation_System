{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/ErrorAlert.js","ReservationsAndTables/ReservationCard.js","dashboard/Dashboard.js","layout/NotFound.js","ReservationsAndTables/ReservationForm.js","ReservationsAndTables/NewReservation.js","ReservationsAndTables/Edit.js","ReservationsAndTables/SeatReservation.js","ReservationsAndTables/Search.js","ReservationsAndTables/NewTable.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","createReservation","signal","method","body","JSON","stringify","table","finishReservation","tableId","assignResIdToTable","reservation_id","table_id","listTables","URL","getReservation","changeStatus","newStatus","searchByNumber","mobile_number","editReservation","listReservations","params","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","ErrorAlert","ReservationCard","setCancelled","useState","reservationElements","setReservationElements","isSearch","useLocation","pathname","includes","cancelBtnHandler","target","window","confirm","cancelled","dataset","reservationIdCancel","useEffect","reservation_time","first_name","last_name","people","created_at","booked","buttons","href","role","onClick","data-reservation-id-cancel","reservationElement","style","marginBottom","data-reservation-id-status","marginLeft","formatElements","Dashboard","location","URLSearchParams","search","get","setReservations","reservationsError","setReservationsError","resId","finishIds","setFinishIds","tables","setTables","tablesError","setTablesError","tablesLoaded","setTablesLoaded","cancelledReservation","abortController","AbortController","abort","result","filter","sort","resA","resB","fetchedTables","tbls","finishHandler","tableIdFinish","reservationIdFinish","loadTables","changeStatusCancel","loadReservations","tablesList","backgroundColor","table_name","capacity","data-table-id-status","data-table-id-finish","data-reservation-id-finish","NotFound","newToday","ReservationForm","initialFormData","history","useHistory","isEdit","isNew","setReservation","setError","submitAttempt","setSubmitAttempt","badTime","validReservationTimes","timeChosen","form","chosenMinutes","Number","chosenHour","currentTime","now","currentHour","getHours","currentMinute","getMinutes","handleChange","navigateToDashboard","push","dateChosen","can","event","err","onSubmit","preventDefault","APIOnSubmit","htmlFor","onChange","required","isNotTuesday","getDay","isThisDayOrAfter","isThisMonthOrAfter","isThisYearOrAfter","isAfterThisYear","margin","NewReservation","Edit","useParams","setInitialFormData","SeatReservation","catch","cap","loadReservationData","reservationError","setReservationError","setReservationElement","selection","setSelection","tableCap","setTableCap","partyIsSmallerThanCap","setPartyIsSmallerThanCap","nothingSelected","setNothingSelected","partyIsSmallerThanCapacity","substring","count","getAttribute","Search","placeholder","setMobileNumber","searchError","setSearchError","emptySearch","setEmptySearch","noResultsFound","setNoResultsFound","clicked","setClicked","reservationResults","length","noResultsFoundElement","emptySearchElement","NewTable","newTable","setNewTable","createTable","goBack","Routes","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73bd8130.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nexport function asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [year, month, day] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [year, month, day] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\n\nexport function formatDate(date) {\n  //returns mm/dd/yyyy from yyyy/mm/dd\n  return `${date[5]}${date[6]}-${date[8]}${date[9]}-${date[0]}${date[1]}${date[2]}${date[3]}`;\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Creates a new reservation\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to the newly created reservation.\n */\nexport async function createReservation(reservation, signal) {\n  const url = `${API_BASE_URL}/reservations`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation);\n}\n\n/**\n * Creates a new table\n * @returns {Promise<[table]>}\n *  a promise that resolves to the newly created table.\n */\nexport async function createTable(table, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options, table);\n}\n\nexport async function finishReservation(tableId, signal) {\n  const url = `${API_BASE_URL}/tables/${tableId}/seat`;\n  const options = {\n    method: \"DELETE\",\n    headers,\n    signal,\n  };\n  return await fetchJson(url, options, signal);\n}\n\n//seat reservation\nexport async function assignResIdToTable(reservation_id, table_id) {\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"PUT\",\n    body: JSON.stringify({ data: { reservation_id } }),\n    headers,\n  };\n  return await fetchJson(url, options, {});\n}\n\nexport async function listTables(signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  return await fetchJson(url, { headers, signal }, []);\n}\n\nexport async function getReservation(reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n  return await fetchJson(url, { headers, signal }, []);\n}\n\nexport async function changeStatus(newStatus, reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { status: newStatus } }),\n    signal,\n  };\n\n  return await fetchJson(url, options, []);\n}\n\nexport async function searchByNumber(mobile_number, signal) {\n  let url = new URL(`${API_BASE_URL}/reservations`);\n  if (mobile_number) {\n    url = `${url}?mobile_number=${mobile_number}`;\n  }\n  return await fetchJson(url, { headers, signal }, []);\n}\n\nexport async function editReservation(reservation, reservation_id, signal) {\n  let url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n\n  return await fetchJson(url, options, []);\n}\n\n/**\n * Retrieves all existing reservation.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\n */\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./ReservationCard.css\";\r\n\r\nfunction ReservationCard({ reservations, setCancelled }) {\r\n  const [reservationElements, setReservationElements] = useState([]);\r\n  const { pathname } = useLocation();\r\n\r\n  const isSearch = pathname.includes(\"search\");\r\n\r\n  //implement into dashboard\r\n  useEffect(() => {\r\n    setReservationElements(formatElements(reservations));\r\n  }, [reservations]);\r\n\r\n  function cancelBtnHandler({ target }) {\r\n    if (\r\n      window.confirm(\r\n        \"Do you want to cancel this reservation? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      setCancelled(\r\n        (cancelled) => (cancelled = target.dataset.reservationIdCancel)\r\n      );\r\n    }\r\n  }\r\n\r\n  function formatElements(reservations) {\r\n    const formattedReservationElements = reservations.map((reservation) => {\r\n      const {\r\n        status,\r\n        reservation_id,\r\n        reservation_time,\r\n        reservation_date,\r\n        first_name,\r\n        last_name,\r\n        people,\r\n        created_at,\r\n        mobile_number,\r\n      } = reservation;\r\n\r\n      // reservations can only be canceled, seated, or edited if they have status \"booked\"\r\n      const booked = status === \"booked\";\r\n      const buttons = (\r\n        <div className='row justify-content-end'>\r\n          <div>\r\n            <a\r\n              className='btn btn-outline-warning'\r\n              href={`/reservations/${reservation_id}/edit`}\r\n              role='button'\r\n            >\r\n              edit\r\n            </a>\r\n          </div>\r\n          <div>\r\n            {}\r\n            <button\r\n              className='btn btn-outline-danger'\r\n              onClick={cancelBtnHandler}\r\n              data-reservation-id-cancel={reservation.reservation_id}\r\n            >\r\n              cancel\r\n            </button>\r\n          </div>\r\n          <a\r\n            href={`/reservations/${reservation_id}/seat`}\r\n            role='button'\r\n            className='btn btn-outline-primary'\r\n          >\r\n            seat\r\n          </a>\r\n        </div>\r\n      );\r\n\r\n      const reservationElement = (\r\n        <div\r\n          className='card'\r\n          key={reservation_id}\r\n          style={{ marginBottom: \"5px\" }}\r\n        >\r\n          <div className='row justify-content-between'>\r\n            <h3>\r\n              {last_name}, {first_name}\r\n            </h3>\r\n            <div>\r\n              <span\r\n                className='badge bg-primary'\r\n                data-reservation-id-status={reservation.reservation_id}\r\n              >\r\n                {status}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <h5>Mobile Number</h5>\r\n              <p>{mobile_number}</p>\r\n            </div>\r\n            <div className='col'>\r\n              <h5>Date and Time:</h5>\r\n              <p>\r\n                {reservation_date}, {reservation_time}\r\n              </p>\r\n            </div>\r\n            <div className='col'>\r\n              <h5>Party Size:</h5>\r\n              <p>{people}</p>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='row align-items-end'>\r\n              <p className='col-5 ' style={{ marginLeft: \"20px\" }}>\r\n                Created at: {created_at}\r\n              </p>\r\n              <p className='col'>Reservation ID: {reservation_id}</p>\r\n            </div>\r\n            <div className='col'>{booked && !isSearch ? buttons : null}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n      if (status !== \"cancelled\") {\r\n        return reservationElement;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    return formattedReservationElements;\r\n  }\r\n\r\n  return reservationElements;\r\n}\r\n\r\nexport default ReservationCard;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  listReservations,\n  listTables,\n  finishReservation,\n  changeStatus,\n} from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport ReservationCard from \"../ReservationsAndTables/ReservationCard\";\nimport \"./Dashboard.css\";\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\n\n//additional hook is needed to get query param from url\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Dashboard({ date }) {\n  //////  \\/ load reservations \\/  //////\n  //overide default date if \"date\" is present in query param\n  let location = useQuery().get(\"date\");\n  if (location) date = location;\n\n  //states for reservation data and errors\n  const [reservations, setReservations] = useState([]);\n  const [reservationsError, setReservationsError] = useState(null);\n\n  //states for finishing or canceling reservations\n  const [finishIds, setFinishIds] = useState({ tableId: \"\", resId: \"\" });\n  const [cancelled, setCancelled] = useState(\"\");\n\n  //states for tables data and errors\n  const [tables, setTables] = useState([]);\n  const [tablesError, setTablesError] = useState(null);\n  const [tablesLoaded, setTablesLoaded] = useState(false);\n\n  //called on initial render and state update to render table\n  //and reservation data\n  useEffect(() => {\n    loadTables();\n    if (cancelled) {\n      changeStatusCancel(cancelled);\n    }\n  }, [date, cancelled, finishIds]);\n\n  useEffect(() => {\n    if (tablesLoaded) {\n      loadReservations();\n    }\n  }, [tablesLoaded]);\n  // call api to cancel reservation\n  async function changeStatusCancel(cancelledReservation) {\n    const abortController = new AbortController();\n    await changeStatus(\n      \"cancelled\",\n      cancelledReservation,\n      abortController.signal\n    );\n    setCancelled((cancelled) => (cancelled = \"\"));\n    return () => abortController.abort();\n  }\n\n  // call api to load reservation data\n  async function loadReservations() {\n    const abortController = new AbortController();\n    try {\n      setReservationsError(null);\n      const result = await listReservations({ date }, abortController.signal);\n      result.filter(\n        (reservation) =>\n          reservation.status === \"booked\" || reservation.status === \"seated\"\n      );\n\n      setReservations(\n        result.sort(\n          (resA, resB) => resA.reservation_time > resB.reservation_time\n        )\n      );\n    } catch (error) {\n      setReservationsError(error);\n    }\n    return () => abortController.abort();\n  }\n\n  // call api to load tables data\n  async function loadTables() {\n    setTablesLoaded(false);\n    setTables((tables) => (tables = []));\n    setTablesError((error) => (error = null));\n    const { tableId } = finishIds;\n    const abortController = new AbortController();\n    try {\n      if (tableId) {\n        try {\n          await finishReservation(tableId, abortController.signal);\n          setFinishIds({ ...finishIds, tableId: \"\" });\n        } catch (error) {\n          setTablesError(error);\n        }\n      }\n      const fetchedTables = await listTables(abortController.signal);\n      setTables((tbls) => (tbls = fetchedTables));\n      setTablesLoaded(true);\n    } catch (error) {\n      setTablesError(error);\n    }\n\n    return () => abortController.abort();\n  }\n  // handle state when finish button is pressed\n  function finishHandler({ target }) {\n    if (\n      window.confirm(\n        \"Is this table ready to seat new guests? This cannot be undone.\"\n      )\n    ) {\n      setFinishIds({\n        tableId: target.dataset.tableIdFinish,\n        resId: target.dataset.reservationIdFinish,\n      });\n    }\n  }\n\n  // format tables list to jsx elements\n  const tablesList = tables.map((table) => {\n    let backgroundColor = table.reservation_id ? \"occupied\" : \"free\";\n    return (\n      <li className={`list-group-item ${backgroundColor}`} key={table.table_id}>\n        <div>\n          <div className='row'>\n            <div className='col'>\n              <h4>Table Name</h4>\n              <p>{table.table_name}</p>\n              <h4>Table Capacity</h4>\n              <p>{table.capacity}</p>\n            </div>\n            {table.reservation_id ? (\n              <div className='row'>\n                <div className='col'>\n                  <span\n                    className='badge bg-success'\n                    data-table-id-status={table.table_id}\n                  >\n                    occupied\n                  </span>\n                  <br />\n                  <button\n                    onClick={finishHandler}\n                    data-table-id-finish={table.table_id}\n                    data-reservation-id-finish={table.reservation_id}\n                    className='btn btn-danger'\n                  >\n                    Finish\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <span\n                  data-table-id-status={table.table_id}\n                  className='badge bg-primary'\n                >\n                  free\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <main className='container'>\n      <div className='row'>\n        <div className='col'>\n          <h1>Dashboard</h1>\n          <div className='d-md-flex mb-3'>\n            <h5 className='mb-0'>Reservations for date: {date}</h5>\n          </div>\n          <div className='col'>\n            <h2>Tables</h2>\n            <ErrorAlert error={tablesError} />\n            <ul className='list-group'>{tablesList}</ul>\n          </div>\n          <div className='col'>\n            <h2>Reservations</h2>\n            <ErrorAlert error={reservationsError} />\n            <ul className='list-group'>\n              {\n                <ReservationCard\n                  reservations={reservations}\n                  cancelled={cancelled}\n                  setCancelled={setCancelled}\n                />\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\r\n\r\n/**\r\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\r\n *\r\n * You will not need to    make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction NotFound() {\r\n  return (\r\n    <div className='NotFound'>\r\n      <h1>Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { createReservation, editReservation } from \"../utils/api\";\r\nimport { today, formatDate, asDateString } from \"../utils/date-time\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { changeStatus } from \"../utils/api\";\r\n\r\nconst newToday = today();\r\n\r\nfunction ReservationForm({ initialFormData }) {\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const isEdit = pathname.includes(\"edit\");\r\n  const isNew = pathname.includes(\"new\");\r\n\r\n  const [reservation, setReservation] = useState({ ...initialFormData });\r\n  const [error, setError] = useState(\"\");\r\n  const [submitAttempt, setSubmitAttempt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let dateChosen = new Date(initialFormData.reservation_date);\r\n    if (isEdit) {\r\n      setReservation({\r\n        ...initialFormData,\r\n        reservation_date: asDateString(dateChosen),\r\n      });\r\n    }\r\n  }, [initialFormData]);\r\n\r\n  function validReservationDates({ target }) {\r\n    // dates must be in converted from yyyy/mm/dd to mm/dd/yyyy for Date.prototype conversion\r\n    const dateChosen = new Date(formatDate(target.value));\r\n    const today = new Date(formatDate(newToday));\r\n    const isNotTuesday = dateChosen.getDay() !== 2; // 2 = tuesday's index\r\n    const isThisDayOrAfter = dateChosen.getDate() >= today.getDate();\r\n    const isThisMonthOrAfter = dateChosen.getMonth() >= today.getMonth();\r\n    const isThisYearOrAfter = dateChosen.getFullYear() >= today.getFullYear();\r\n    const isAfterThisYear = dateChosen.getFullYear() - today.getFullYear() > 0;\r\n    if (\r\n      (isNotTuesday &&\r\n        isThisDayOrAfter &&\r\n        isThisMonthOrAfter &&\r\n        isThisYearOrAfter) ||\r\n      isAfterThisYear\r\n    ) {\r\n      setError(\"\");\r\n      setSubmitAttempt(false);\r\n      setReservation(\r\n        (form) => (form = { ...form, reservation_date: target.value })\r\n      );\r\n    } else {\r\n      setReservation(\r\n        (form) => (form = { ...form, reservation_date: target.value })\r\n      );\r\n      setError({\r\n        message: \"Please enter a valid date. (We are closed on tuesdays)\",\r\n      });\r\n    }\r\n\r\n    // validate time in case date was set after time\r\n    validReservationTimes();\r\n  }\r\n\r\n  function badTime() {\r\n    setError({\r\n      message:\r\n        \"Please enter a valid time. (We reserve tables from 10:30AM to 9:30PM.)\",\r\n    });\r\n  }\r\n\r\n  function validReservationTimes({ target } = reservation.reservation_time) {\r\n    let timeChosen;\r\n\r\n    if (target) {\r\n      timeChosen = target.value;\r\n    } else {\r\n      timeChosen = reservation.reservation_time;\r\n    }\r\n\r\n    setReservation(\r\n      (form) => (form = { ...form, reservation_time: timeChosen })\r\n    );\r\n\r\n    let chosenMinutes = Number(`${timeChosen[3]}${timeChosen[4]}`);\r\n    let chosenHour = Number(`${timeChosen[0]}${timeChosen[1]}`);\r\n\r\n    const currentTime = new Date(Date.now());\r\n    const currentHour = currentTime.getHours();\r\n    const currentMinute = currentTime.getMinutes();\r\n\r\n    //return error message if chosen time is outsisde operating hours\r\n\r\n    if (\r\n      (chosenHour >= 21 && chosenMinutes > 30) ||\r\n      chosenHour > 21 ||\r\n      (chosenHour <= 10 && chosenMinutes < 30) ||\r\n      chosenHour < 10\r\n    ) {\r\n      badTime();\r\n    } else {\r\n      setError(\"\");\r\n      setSubmitAttempt(false);\r\n    }\r\n\r\n    if (reservation.reservation_date === newToday) {\r\n      // if the chosen hour is later than the current hour (current hour is less than chosen hour) set reservation time\r\n      if (currentHour < chosenHour) {\r\n        setError(\"\");\r\n        setSubmitAttempt(false);\r\n      }\r\n      // if the chosen hour is earlier than the current hour (current hour is greater than the chosen hour ) display error message\r\n      else if (currentHour > chosenHour) {\r\n        badTime();\r\n      }\r\n      // if hours are the same check minutes\r\n      else {\r\n        // if the chosen minute is later than the current minute ( current minute is less than the chosen minute ) set reservation time\r\n        if (currentMinute < chosenMinutes) {\r\n          setError(\"\");\r\n          setSubmitAttempt(false);\r\n        }\r\n        // if the chosen minute is earlier than the current minute (current minute is greater than chosen minute) display error message\r\n        else {\r\n          badTime();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChange({ target: { name, value } }) {\r\n    setReservation({ ...reservation, [name]: value });\r\n  }\r\n\r\n  function navigateToDashboard() {\r\n    history.push(`/dashboard?date=${reservation.reservation_date}`);\r\n  }\r\n\r\n  const [cancelled, setCancelled] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (cancelled) {\r\n      changeStatusCancel(cancelled);\r\n      navigateToDashboard();\r\n    }\r\n  }, [cancelled]);\r\n\r\n  // call api to cancel reservation\r\n  async function changeStatusCancel(cancelledReservation) {\r\n    const abortController = new AbortController();\r\n    await changeStatus(\r\n      \"cancelled\",\r\n      cancelledReservation,\r\n      abortController.signal\r\n    );\r\n    setCancelled((can) => (can = \"\"));\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  function cancelBtnHandler(event) {\r\n    event.preventDefault();\r\n    if (\r\n      window.confirm(\r\n        \"Do you want to cancel this reservation? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      setCancelled((cancelled) => (cancelled = reservation.reservation_id));\r\n    }\r\n  }\r\n\r\n  async function APIOnSubmit(event) {\r\n    const abortController = new AbortController();\r\n    setError(null);\r\n    //if this is an edit: call editReservation from API, else: call is createReservation from API\r\n    if (isEdit) {\r\n      try {\r\n        await editReservation(\r\n          { ...reservation, people: Number(reservation.people) },\r\n          reservation.reservation_id,\r\n          abortController.signal\r\n        );\r\n        // navigate to dashboard is promise is resolved\r\n        navigateToDashboard();\r\n      } catch (error) {\r\n        //set error to display if caught\r\n        setError((err) => (err = error));\r\n      }\r\n    } else if (isNew) {\r\n      try {\r\n        await createReservation(\r\n          { ...reservation, people: Number(reservation.people) },\r\n          abortController.signal\r\n        );\r\n        // navigate to dashboard is promise is resolved\r\n        navigateToDashboard();\r\n      } catch (error) {\r\n        //set error to display if caught\r\n        setError((err) => (err = error));\r\n      }\r\n    }\r\n\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setSubmitAttempt(true);\r\n    if (!error) {\r\n      APIOnSubmit(event);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div>{submitAttempt ? <ErrorAlert error={error} /> : null}</div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <label htmlFor='first_name'>First Name</label>\r\n            <br />\r\n            <input\r\n              type='text'\r\n              onChange={handleChange}\r\n              name='first_name'\r\n              value={reservation.first_name}\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='last_name'>Last Name</label>\r\n            <br />\r\n            <input\r\n              type='text'\r\n              onChange={handleChange}\r\n              name='last_name'\r\n              value={reservation.last_name}\r\n              required={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <label htmlFor='mobile_number'>Mobile Number</label>\r\n            <br />\r\n            <input\r\n              type='text'\r\n              onChange={handleChange}\r\n              name='mobile_number'\r\n              value={reservation.mobile_number}\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='people'>Party Size</label>\r\n            <br />\r\n            <input\r\n              type='text'\r\n              onChange={handleChange}\r\n              name='people'\r\n              value={reservation.people}\r\n              required={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <label htmlFor='reservation_date'>Date of Reservation</label>\r\n            <br />\r\n            <input\r\n              type='date'\r\n              onChange={validReservationDates}\r\n              name='reservation_date'\r\n              value={reservation.reservation_date}\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='reservation_time'>Time of Reservation</label>\r\n            <br />\r\n            <input\r\n              type='time'\r\n              onChange={validReservationTimes}\r\n              name='reservation_time'\r\n              value={reservation.reservation_time}\r\n              required={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ margin: \"25px 0 0 0\" }}\r\n          className='row w-75 justify-content-center'\r\n        >\r\n          <button className='btn btn-primary' type='submit'>\r\n            Submit\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              history.push(`/dashboard?date=${reservation.reservation_date}`)\r\n            }\r\n            className='btn btn-secondary'\r\n            type='cancel'\r\n          >\r\n            Cancel\r\n          </button>\r\n          {isEdit ? (\r\n            <div>\r\n              <button onClick={cancelBtnHandler} className='btn btn-danger'>\r\n                Cancel Reservation\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReservationForm;\r\n","import React from \"react\";\r\nimport ReservationForm from \"./ReservationForm\";\r\nimport { today } from \"../utils/date-time\";\r\n\r\nfunction NewReservation() {\r\n  const initialFormData = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    mobile_number: \"\",\r\n    reservation_date: today(),\r\n    reservation_time: \"\",\r\n    people: \"\",\r\n    status: \"booked\",\r\n  };\r\n\r\n  return (\r\n    <main className='container'>\r\n      <div className='row justify-content-center'>\r\n        <div className='col-8'>\r\n          <div>\r\n            <h1>New reservation</h1>\r\n          </div>\r\n          {<ReservationForm initialFormData={initialFormData} />}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default NewReservation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getReservation } from \"../utils/api\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReservationForm from \"./ReservationForm\";\r\n\r\nfunction Edit() {\r\n  const { reservation_id } = useParams();\r\n  const [initialFormData, setInitialFormData] = useState({\r\n    reservation_id: reservation_id,\r\n  });\r\n\r\n  useEffect(() => {\r\n    Promise.resolve(getReservation(reservation_id).then(setInitialFormData));\r\n  }, [reservation_id]);\r\n\r\n  return (\r\n    <main className='container'>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          <div>\r\n            <h1>Edit reservation:</h1>\r\n          </div>\r\n          {<ReservationForm initialFormData={initialFormData} />}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { listTables, assignResIdToTable, getReservation } from \"../utils/api\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nfunction SeatReservation() {\r\n  const { reservation_id } = useParams();\r\n  const history = useHistory();\r\n\r\n  ////// \\/ load tables \\/ \\\\\\\\\\\\\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n  useEffect(loadTables, [reservation_id]);\r\n\r\n  function loadTables() {\r\n    const abortController = new AbortController();\r\n    setTablesError(null);\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  const tablesList = tables.map((table) => {\r\n    if (!table.reservation_id) {\r\n      return (\r\n        <option\r\n          key={table.table_id}\r\n          value={table.table_id}\r\n          name={table.table_name}\r\n          cap={table.capacity}\r\n        >\r\n          {table.table_name} - {table.capacity}\r\n        </option>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  // \\/Load reservation\\/ \\\\\r\n  useEffect(() => {\r\n    loadReservationData();\r\n  }, []);\r\n\r\n  const [reservation, setReservation] = useState(\"\");\r\n  const [reservationError, setReservationError] = useState(null);\r\n  const [reservationElement, setReservationElement] = useState(\"\");\r\n\r\n  async function loadReservationData() {\r\n    const abortController = new AbortController();\r\n    try {\r\n      const reservation = await getReservation(\r\n        reservation_id,\r\n        abortController.signal\r\n      );\r\n      setReservation(reservation);\r\n      setReservationElement(\r\n        (reservationElement) =>\r\n          (reservationElement = (\r\n            <div>\r\n              <h4>The {reservation.last_name} party</h4>\r\n              <h5>Reservation Holder:</h5>{\" \"}\r\n              <p>\r\n                {reservation.last_name}, {reservation.first_name}\r\n              </p>\r\n              <h5>Phone Number</h5> <p>{reservation.mobile_number}</p>\r\n              <h5>Party of:</h5> <p>{reservation.people} people</p>\r\n              <h5>Reservation Time</h5>\r\n              <p>{reservation.reservation_time}</p>\r\n            </div>\r\n          ))\r\n      );\r\n    } catch (error) {\r\n      setReservationError(error);\r\n    }\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  // \\/handle select state\\/ \\\\\r\n\r\n  const [selection, setSelection] = useState(\"select a table\");\r\n  const [tableCap, setTableCap] = useState(\"\");\r\n  const [partyIsSmallerThanCap, setPartyIsSmallerThanCap] = useState(true);\r\n  const [nothingSelected, setNothingSelected] = useState(true);\r\n\r\n  function handleChange(event) {\r\n    setNothingSelected(false);\r\n    let count = 0;\r\n    while (event.target[count]) {\r\n      if (event.target[count].getAttribute(\"value\") === event.target.value) {\r\n        const tableCap = event.target[count].getAttribute(\"cap\");\r\n        setTableCap(tableCap);\r\n      }\r\n      setSelection(event.target.value);\r\n      count++;\r\n    }\r\n  }\r\n\r\n  /// \\/ assign table \\/ \\\\\\\\\r\n\r\n  function partyIsSmallerThanCapacity() {\r\n    return Number(tableCap) >= Number(reservation.people);\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    const abortController = new AbortController();\r\n    event.preventDefault();\r\n    const partyIsSmallerThanCap = partyIsSmallerThanCapacity();\r\n\r\n    if (partyIsSmallerThanCap) {\r\n      setPartyIsSmallerThanCap(true);\r\n      //await changeStatus(\"seated\", reservation_id);\r\n      await assignResIdToTable(\r\n        reservation_id,\r\n        selection,\r\n        abortController.signal\r\n      );\r\n      history.push(\r\n        `/dashboard?date=${reservation.reservation_date.substring(0, 10)}`\r\n      );\r\n    } else {\r\n      setPartyIsSmallerThanCap(false);\r\n    }\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  function handleCancel() {\r\n    history.push(\r\n      `/dashboard?date=${reservation.reservation_date.substring(0, 10)}`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'></div>\r\n      <h4>Choose table to seat reservation #{reservation_id}</h4>\r\n      <div>\r\n        <h3>Reservation information:</h3>\r\n        <ErrorAlert error={reservationError} />\r\n        {reservationElement}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <h5>Available tables:</h5>\r\n          <ErrorAlert error={tablesError} />\r\n          <select name='table_id' onChange={handleChange}>\r\n            {nothingSelected ? <option>select a table</option> : null}\r\n            {tablesList}\r\n          </select>\r\n        </label>\r\n        <div>\r\n          <button type='submit' className='btn btn-primary'>\r\n            Seat Table\r\n          </button>\r\n          <button\r\n            type='reset'\r\n            onClick={handleCancel}\r\n            className='btn btn-warning'\r\n          >\r\n            Cancel\r\n          </button>\r\n          <div>\r\n            {partyIsSmallerThanCap ? null : (\r\n              <p className='alert alert-danger'>\r\n                Please make a new table selection. (Capacity may be too small\r\n                for reservation.)\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeatReservation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { searchByNumber } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport ReservationCard from \"./ReservationCard\";\r\n\r\nfunction Search() {\r\n  const placeholder = \"Enter a customer's phone number\";\r\n  const [reservations, setReservations] = useState([]);\r\n  const [mobile_number, setMobileNumber] = useState(placeholder);\r\n  const [searchError, setSearchError] = useState(\"\");\r\n  const [emptySearch, setEmptySearch] = useState(true);\r\n  const [noResultsFound, setNoResultsFound] = useState(true);\r\n  const [clicked, setClicked] = useState(0);\r\n  useEffect(() => {\r\n    loadReservations();\r\n  }, [mobile_number, clicked]);\r\n\r\n  async function loadReservations() {\r\n    try {\r\n      if (mobile_number) {\r\n        const reservationResults = await searchByNumber(mobile_number);\r\n        setReservations(reservationResults);\r\n        setNoResultsFound(false);\r\n        if (\r\n          mobile_number &&\r\n          !reservations.length &&\r\n          mobile_number !== placeholder\r\n        ) {\r\n          setNoResultsFound(true);\r\n        }\r\n      } else {\r\n        setNoResultsFound(true);\r\n      }\r\n    } catch (error) {\r\n      setSearchError(error);\r\n      setNoResultsFound(true);\r\n    }\r\n  }\r\n\r\n  function search(value) {\r\n    if (value) {\r\n      setEmptySearch(false);\r\n      setMobileNumber(value);\r\n    } else {\r\n      setEmptySearch(true);\r\n      setMobileNumber(value);\r\n    }\r\n  }\r\n\r\n  function onChange({ target: { value } }) {\r\n    if (value !== \" \" || value !== \"\") search(value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    search(mobile_number);\r\n  }\r\n\r\n  const noResultsFoundElement = (\r\n    <div>\r\n      <h5>No reservations found</h5>\r\n    </div>\r\n  );\r\n\r\n  const emptySearchElement = (\r\n    <div className='row justify-content-center'>\r\n      <h4>Enter a mobile number to search reservations.</h4>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ margin: \"30px 0 30px 30px\" }}>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <ErrorAlert error={searchError} />\r\n          <div className='row align-items-end'>\r\n            <div className='col'>\r\n              <label className='w-100'>\r\n                <h5>Search by mobile number:</h5>\r\n                <input\r\n                  className='w-75 p-1'\r\n                  type='search'\r\n                  value={mobile_number}\r\n                  onClick={() => {\r\n                    if (mobile_number === placeholder) setMobileNumber(\"\");\r\n                  }}\r\n                  onChange={onChange}\r\n                  name='mobile_number'\r\n                ></input>\r\n              </label>\r\n            </div>\r\n            <div className='col'>\r\n              <button\r\n                type='submit'\r\n                role='button'\r\n                onClick={() => {\r\n                  setClicked(clicked + 1);\r\n                }}\r\n                className='btn btn-primary'\r\n              >\r\n                Find\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className='col p-5'>\r\n        {emptySearch ? (\r\n          emptySearchElement\r\n        ) : (\r\n          <ReservationCard reservations={reservations} />\r\n        )}\r\n      </div>\r\n      <div className='col'>{noResultsFound ? noResultsFoundElement : null}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { createTable } from \"../utils/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\nfunction NewTable() {\r\n  const initialFormData = {\r\n    table_name: \"\",\r\n    capacity: \"\",\r\n  };\r\n\r\n  const [newTable, setNewTable] = useState({ ...initialFormData });\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  function handleChange({ target: { name, value } }) {\r\n    setNewTable({ ...newTable, [name]: value });\r\n    if (newTable.table_name.length >= 1) {\r\n      setError(null);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (newTable.table_name.length <= 1) {\r\n      setError({ message: \"Table needs a name with more than one character\" });\r\n    } else {\r\n      setError(null);\r\n      createTable(newTable)\r\n        .then(setNewTable({ ...initialFormData }))\r\n        .then(history.push(\"/dashboard\"))\r\n        .catch(setError);\r\n    }\r\n  }\r\n\r\n  function handleCancel(event) {\r\n    event.preventDefault();\r\n    history.goBack();\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div style={{ margin: \"20px 0 0 30px\" }}>\r\n        <h1>New Table</h1>\r\n        <ErrorAlert error={error} />\r\n        <div className='col'>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='row'>\r\n              <div className='col'>\r\n                <label>\r\n                  <h5>Name</h5>\r\n                  <input\r\n                    onChange={handleChange}\r\n                    name='table_name'\r\n                    type='text'\r\n                    value={newTable.table_name}\r\n                    required={true}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <div className='col'>\r\n                <label>\r\n                  <h5>Capacity</h5>\r\n                  <input\r\n                    onChange={handleChange}\r\n                    name='capacity'\r\n                    type='text'\r\n                    value={newTable.capacity}\r\n                    required={true}\r\n                  />\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <button type='submit' className='btn btn-primary'>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type='cancel'\r\n              className='btn btn-warning'\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTable;\r\n","import React from \"react\";\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NotFound from \"./NotFound\";\nimport { today } from \"../utils/date-time\";\nimport NewReservation from \"../ReservationsAndTables/NewReservation\";\nimport Edit from \"../ReservationsAndTables/Edit\";\nimport SeatReservation from \"../ReservationsAndTables/SeatReservation\";\nimport Search from \"../ReservationsAndTables/Search\";\nimport NewTable from \"../ReservationsAndTables/NewTable\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact={true} path='/'>\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact={true} path='/reservations'>\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route path='/dashboard'>\n        <Dashboard date={today()} />\n      </Route>\n      <Route exact={true} path='/reservations/new'>\n        <NewReservation />\n      </Route>\n      <Route exact={true} path='/reservations/:reservation_id/edit'>\n        <Edit />\n      </Route>\n      <Route exact={true} path='/reservations/:reservation_id/seat'>\n        <SeatReservation />\n      </Route>\n      <Route exact={true} path='/search'>\n        <Search />\n      </Route>\n      <Route exact={true} path='/tables/new'>\n        <NewTable />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row h-100\">\n        <div className=\"col-md-2 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col\">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}